<?php
namespace bundles\lifestream\Models;

/**
 * Lifestream bundle model couch
 *
 * @author niko
 *
 */
class Lifestream extends \Library\Core\Feed
{
    /**
     * An array of \app\Entities\Feed availables
     *
     * @var array
     */
    private $aFeeds = array();

    /**
     * \Library\Core\Feed component constructor overide
     */
    public function __construct($iFeedId = null, \app\Entities\User $oUser)
    {
        assert('intval($iFeedId) > 0');
        if (! $oUser->isLoaded()) {
            throw new BlogModelException('Blog need a valid user instance, no user provided.');
        } elseif (! $oUser instanceof \app\Entities\User || ! $oUser->isLoaded()) {
            throw new BlogModelException('Blog need a valid user instance, no user provided.');
        } else {
            try {
                try {
                    $oFeed = new \app\Entities\Feed($iFeedId);
                    $this->registerFeed($oFeed);
                } catch(\Library\Core\EntityException $oFeedEntityException) {
                    throw new LifestreamModelException('Invalid feed requested: ' . $oFeedEntityException->getMessage());
                }
                parent::__construct($oFeed);
            } catch (\Library\Core\FeedException $oFeedException) {
                throw new LifestreamModelException('Unable to construct Feed: ' . $oFeedException->getMessage());
            }
        }
    }

    /**
     * Parse new feed activities
     *
     * @todo check ACL component
     * @see \Library\Core\Feed::parse()
     *
     * @param integer $iFeedId                      \app\Entities\Feed primary key value
     * @param boolean $bPersistNewFeedItem          Flag to persist new activities found
     * @param integer $iDelta                       Depth from the last activity
     */
    public function parse($iFeedId, $bPersistNewFeedItem = false, $iDelta = 256)
    {
        if (intval($iFeedId) > 0) {
            try {
                $oFeed = $this->getFeed($iFeedId);
                switch ($oFeed->domain) {
                	case 'twitter.com':
                	    $oTwitterActivity = new \bundles\lifestream\Models\TwitterActivity($oFeed);
                	    die(var_dump($oTwitterActivity->parse(true)));
                	    break;
                	default:
                	    break;
                }
            } catch(\Library\Core\CrudException $oException) {
                return null;
            }
        }
        return null;
    }

    /**
     * Register a new \app\Entities\Feed on the lifestream
     *
     * @param \app\Entities\Feed $oFeed
     */
    protected function registerFeed(\app\Entities\Feed $oFeed)
    {
        if ($oFeed->isLoaded()) {
            $this->aFeeds[$oFeed->getId()] = $oFeed;
        }
    }

    /**
     * Get \app\Entities\Feed from lifestream feeds
     *
     * @param integert $iFeedId
     * @return \app\Entities\Feed|NULL
     */
    protected function getFeed($iFeedId)
    {
        assert('intval($iFeedId) > 0');
        return ((isset($this->aFeeds[$iFeedId])) ? $this->aFeeds[$iFeedId] : null);
    }
}

class LifestreamModelException extends \Exception
{
}

